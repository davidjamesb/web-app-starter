<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>dne-todo-api-2f979706-5df6-465d-af50-c3917e0e8925</UserSecretsId>

    <Company>Don't Nod</Company>
    <Product />
    <CodeAnalysisRuleSet>stylecop.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.3" NoWarn="NU1605" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="8.0.3" NoWarn="NU1605" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="8.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Identity.Web" Version="2.15.2" />
    <PackageReference Include="Microsoft.Identity.Web.DownstreamApi" Version="2.15.2" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="8.0.4" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="8.0.4" />
    <PackageReference Include="MongoDB.Driver" Version="2.24.0" />
    <PackageReference Include="DotSwashbuckle.AspNetCore" Version="3.0.8" />
    <PackageReference Include="DotSwashbuckle.AspNetCore.Annotations" Version="3.0.8" />
        <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.556" PrivateAssets="All" />
    <AdditionalFiles Include="stylecop.json" />
  </ItemGroup>

  <Target Name="OpenAPI" AfterTargets="Build">
    <Message Text="Building the openapi.json file" />
    <Exec Command="dotnet swagger tofile --output openapi.json $(TargetPath) v1" WorkingDirectory="$(TargetDir)" />
  </Target>

  <Target Name="CopyScriptsToProject" AfterTargets="Build" Condition="$(Configuration)=='Release'">
    <Message Text="Building Client App. This may take a while." />
<!-- Compile The client App //-->
    <Exec Command="yarn" Condition="'$(RestorePackagesWithLockFile)' != 'true'" WorkingDirectory="$(MSBuildProjectDirectory)/../../client" />
    <Exec Command="yarn generate-api $(TargetDir)/openapi.json" Condition="'$(RestorePackagesWithLockFile)' != 'true'" WorkingDirectory="$(MSBuildProjectDirectory)/../../client" />
    <Exec Command="yarn build" Condition="'$(RestorePackagesWithLockFile)' != 'true'" WorkingDirectory="$(MSBuildProjectDirectory)/../../client" />

<!-- Copy it to the wwwroot folder //-->
    <Message Text="Copying client/dist folder to wwwroot" />
    <RemoveDir Directories="$(MSBuildProjectDirectory)/wwwroot" />
    <ItemGroup>
      <SourceScripts Include="$(MSBuildThisFileDirectory)/../../client/dist/**/*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(SourceScripts)" DestinationFiles="@(SourceScripts -> '$(MSBuildProjectDirectory)/wwwroot/%(RecursiveDir)%(FileName)%(Extension)')" Condition="!Exists('$(MSBuildProjectDirectory)/wwwroot/%(RecursiveDir)%(FileName)%(Extension)')" />
  </Target>

</Project>
